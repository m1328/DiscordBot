trigger:
  branches:
    include:
      - main

parameters:
- name: buildImage
  displayName: 'Build Docker image?'
  type: boolean
  default: true

variables:
  dockerImage: m1328/discord-movie-bot:latest

stages:
- stage: Test
  displayName: 'Run tests'
  jobs:
    - job: PyTest
      displayName: 'Install deps, run pytest and black'
      pool:
        name: 'discord-bot'
        variables:
          - group: moviebot-credentials
      steps:
        - powershell: |
            Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process -Force
          displayName: 'Temporarily allow PowerShell scripts'

        - checkout: self

        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.12'

        - powershell: |
            python -m venv venv
            .\venv\Scripts\Activate.ps1
            python -m pip install --upgrade pip
            pip install -r src/requirements.txt
          displayName: 'Install dependencies'
          
        - powershell: |
            if ($env:TMDB_API_KEY) {
              Write-Host "TMDB_API_KEY is set"
            } else {
              Write-Host "TMDB_API_KEY is NOT set"
            }
          displayName: 'DEBUG: Check TMDB_API_KEY'

        - powershell: |
            .\venv\Scripts\python.exe -m pytest tests
          displayName: 'Run tests with pytest (Windows)'

        - powershell: |
            .\venv\Scripts\python.exe -m black --check src tests
          displayName: 'Run black style check (Windows)'

- stage: Docker
  displayName: 'Build and push Docker image'
  condition: and(succeeded(), eq('${{ parameters.buildImage }}', true))
  jobs:
    - job: DockerBuild
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self

        - task: Docker@2
          inputs:
            command: 'buildAndPush'
            containerRegistry: 'DockerHubConnection'
            repository: 'm1328/discord-bot'
            Dockerfile: 'Dockerfile'
            tags: |
              latest
